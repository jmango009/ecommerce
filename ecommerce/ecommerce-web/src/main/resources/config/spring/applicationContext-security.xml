<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- global-method-security pre-post-annotations="enabled" /-->
	<global-method-security pre-post-annotations="enabled" 
		access-decision-manager-ref="myAccessDecisionManager"/>

	<http pattern="/resources/**" security="none"></http>

	<http auto-config="true" use-expressions="true" access-denied-page="/accessdenied">
		<intercept-url pattern="/login" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/forgotpassword.jsp"/>
		
		<form-login login-page="/login" 
			authentication-failure-url="/login?error=true"
			default-target-url="/index" 
			always-use-default-target='true'/>
		<remember-me data-source-ref="dataSource" />
		<logout invalidate-session="true" logout-success-url="/login.jsp" logout-url="/logout" />

		<session-management 
			session-authentication-error-url="/402.jsp" 
			invalid-session-url="/sessionTimeout">
			<concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
		</session-management>
		<custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR" />
		<session-management session-authentication-strategy-ref="sas" />
	</http>

	<beans:bean id="sas"
		class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
		<beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
		<beans:property name="maximumSessions" value="1" />
		<beans:property name="alwaysCreateSession" value="true" />
		<beans:property name="migrateSessionAttributes" value="false" />
		<beans:property name="exceptionIfMaximumExceeded" value="false" />
	</beans:bean>
	<beans:bean id="sessionRegistry"  
        class="org.springframework.security.core.session.SessionRegistryImpl" />
        
	<beans:bean id="myFilter"
		class="com.spring.security.filter.MyFilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
		<beans:property name="accessDecisionManager" ref="accessDecisionManager"></beans:property>
		<beans:property name="securityMetadataSource" ref="securityMetadataSource"></beans:property>
	</beans:bean> 
    
    <authentication-manager alias="authenticationManager">  
        <authentication-provider user-service-ref="userDetailService">  
            <password-encoder hash="md5" ref="passwordEncoder">  
            </password-encoder>  
        </authentication-provider>  
    </authentication-manager> 
    
    <beans:bean id="accessDecisionManager"  
        class="com.ecommerce.web.security.AccessDecisionManager">  
    </beans:bean> 
    
	<beans:bean id="securityMetadataSource"  
        class="com.ecommerce.web.security.SecurityMetadataSource">  
    </beans:bean>
    
   	<beans:bean id="userDetailService"  
        class="com.ecommerce.web.service.impl.UserDetailServiceImpl">  
    </beans:bean>
    
    <beans:bean id="passwordEncoder"  
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
		
	<beans:bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter">
    	<beans:property name="rolePrefix" value="ROLE_"/>
    </beans:bean>
    
</beans:beans>
